<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelHealth.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAARtJREFUOE9joCtYFRrKDGVigv1WWqn7LDWv7bPU/rvfXPPlAUvtySfMVPhAeL+F
        9pR95prvgHL/QGoOWmjFQ7VBwAFLrXKghv8Y2ELzNBhjkdtvqV0C1nzMQkvogLn2d2yK8OF9llrf9tvr
        CzDst9DywKaAKGyu4wo0QNMFqyQReL+5tgPDfnstHqB/PmJTgBeba74/Y2zMBQ4HUAxgVYQX6ySBNcPA
        AQvtJuwKMfF+S61aqDZUAAzQCdg0IGNgmuiBKscE/xkYGPeba83FphGMLbRnQZXiBkBDmIBOXImpWWs5
        SA6qDD8Ahi4r0Klb4ZrNNTfvt7dngUoTB/bby3McsNTcv89Ccx+IDRUmDRyxUucFpRMoFwtgYAAA0CAw
        4M6q1CwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="labelEnergy.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAQpJREFUOE9jGKwgl52JIbYYiBsRODqXgSGWG6qAEIgxEuELabq2mn8nCK/tkT0s
        Kx48GSpJGDAzxHiHONnV/D/D8B+Ea5P1HwBt14FKEwZAA1ImFqt3gjTf38Tz39bAbQlUijjAwhDdcnKB
        yByQAeVxRs8ZGOLDGBji5KDShAETQ9TEuxv49vw6wfR/VafcW08Lp3kczJGLodIEASMjQ/TaRQ1Kjw/P
        Fvv97zTD/44cncd8nKFmUHliQJQBKCClRYIOHJ4j9txCx7MHKkEKiFFhYYqudjByPQFKF1BB4gHQBQGC
        XBHT5SUCPCEiJAJg6utjYojphXJJBQkcjAwx5xkYIkWgAoMWMDAAAMkCT/h6HO9ZAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="labelEscaped.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAUNJREFUOE+l0r8rxHEcx/Evslj82rjFIhkoRbpTLn+AQUwuomQRyYJzdTeSEgMG
        JQMmuVkMshgkixElJQMlg0k8X5/v53Pd1zep773q0X1+fPt8P/d+f71facAg5pDGCnpQheK0Q8+YDKEF
        OVwjiTbU4QnvOMISxnCCR5zBJI5LfOEb3XDZgtayaIb2HuzaKQq5gxZlE5PYwDL2kIeLXvaCQzOzWYOu
        OgNd/QM67A3lqMEqpjCCRqyjkA5c+UOTHbgbdWqB3EDzUdQicIBygYQ/9AYwbX9TlqvHArR3jEAy2MYu
        9KA6o/RB831UQAdoHiiiEsMztCn6BlrRhU/cQ5mA9nXjUM6hzVeo3yrqLFTxW8zjAPoG9L2Eovappf2o
        1kJRytCEejP7I6quOlBSFuEKGCm9GPeH0VKJkv/GMNTCf+J5P8plSuKXYCPcAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="labelDead.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAyhJREFUOE91
        03tIlXcYB/Dnfc97fz33nHbQ5Tk6L9MoDOe0ebbV3CzSSI3YbKVS4RTLjbFRMTbmaDJhbFPLyzy1QaSu
        FSuPwliSm6QkdEGDrn9ktZxBf5TICctvz3GcDaR+8P3reZ7P7wI/+t4izqdTVykgCuQliu2xiB8MJXmH
        z+dkhcL5K8l79ohFrI0j8rRyTxP31vPMTuK1ACgbf8uP2aZvgeAJ4M+Bf9N/ErMt32FstR8MVD4P+GKy
        ogxzgVY8CXTgYUM9Ln9Yg0u7qjD11ed43NbMtXbcrSwDA98sBN65vn4NZj79CPd2VSO4MhtVpvF3HlHb
        CqKWKrt5a3RVHia3vIvQJ3W4UpgPBkrmgS/5TseS4nCzuAjjGwpxMDEOS4lKGSAGaMbpoOHY2JGzr2bi
        RmEBLhcVYIL7DvniEQHeHExPRn9GGn5LewnLeZgBChoyXTW1MHDhWmYGxl5OQu/ruTiQm4XfUxNxilMu
        CsXUoMmtvU4rOjh7rOY0A9RoCBHgwki0DcM2Bb8kRCMvSgsUaZbJpigFvQ4TWxTpKO02lMFmXcHXpor3
        FamLEwHODdhUDGoCuqKjsNyQuxmgrbLYvteU8ZNmwQ5VGqNaXfljHw+XqyI2W4SuKpsaBs71mBb06QKO
        O3X4dambAarQ53N4q13HPgY2qdJF2q5IjYccBuoshI/d9jkGhttUQo9G6DUlbFTEbgaoRlNpmyxRuduG
        WquKZj7FKkn8md4ThGUBlxWdsoCWxW70OA0EGRjRRFSLwhEG6KhvSQTY2eCLxY9c77Bp8AhCfhigGkO9
        O+oycFwi9BkCRr2LUS9Jv7Y4bBRwuSLAZx0pPgT5Xc5YZVRo8iwDRH5+dU7aD84oTLgNDDlUnE71od0T
        AwbGD7pclxjAQEYyRmLsuOHQ0MS7LyLK5fwHUIpAG/bzVW7HR+NOsgcPcjMRWvsGHhW+jen8HEyl+3Bz
        iRvNdhMJAlWGhxcCFE+Uvk1XJ/p8Hvzz2isIlaxDqLQIU/5s9PteRKWm3HcTrWRgfvhZAPGXjXmBKDtH
        oMYSRe4v5uTwl+Fmf7jGAP0PED0F/zhcvS2XjYQAAAAASUVORK5CYII=
</value>
  </data>
</root>